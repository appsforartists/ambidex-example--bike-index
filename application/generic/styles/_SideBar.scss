.SideBar {
  $drawerTransitionDuration:    .6s;
  $drawerMaxWidth:              400px;

  .Drawer {
    transition-property:          transform -webkit-transform;

    // drawer closing
    @extend                       .easeInOut;
    transition-duration:          $drawerTransitionDuration;

    // avoids a bug in Chrome for Android where the z-index isn't set until
    // after the transition finishes
    @extend                       %layer2;
    box-shadow:                   none;

    position:                     fixed !important;
    top:                            0px;

    height:                       100vh;
    width:                        calc(100vw - #{$appBarHeight});
    max-width:                    $drawerMaxWidth;

    background-color:             white;

    /*  The background will peek through behind the drawer if we
     *  use a tween with follow through.
     *
     *  We can prevent this by creating an ::after pseudo-element
     *  and using it to cover up the hole.
     */
    $drawerBloomerWidth:          5vw;

    &::after {
      content:                      " ";
      display:                      block;

      position:                     absolute;
      top:                            0px;

      width:                        $drawerBloomerWidth;
      height:                       100%;

      background-color:             inherit;
    }

    /*  We want the right edge of the drawer to match the left
     *  edge of the viewport (and vice-versa).  We do this by
     *  telling the left drawer to be one viewport-width away
     *  from the right edge of the screen.
     */
    &.left {
      right:                        100vw;

      &::after {
        left:                       -$drawerBloomerWidth;
      }
    }

    &.right {
      left:                         100vw;

      &::after {
        right:                      -$drawerBloomerWidth;
      }
    }
  }

  .Scrim {
    transition-property:          opacity;
    transition-duration:          $drawerTransitionDuration;

    background-color:             black;
    opacity:                      0;
  }

  &.open {
    .Drawer {
      @extend                       %layer2;

      // drawer opening
      @extend                       .easeOut;
      transition-duration:             .4s;

      &.left {
        transform:                      translateX(
                                          calc(
                                            100vw - #{$appBarHeight}
                                          )
                                        );

        @media all and (min-width: #{$drawerMaxWidth + $appBarHeight}) {
          transform:                      translateX($drawerMaxWidth);
        }
      }

      &.right {
        transform:                      translateX(
                                          calc(
                                            #{$appBarHeight} - 100vw
                                          )
                                        );

        @media all and (min-width: #{$drawerMaxWidth + $appBarHeight}) {
          transform:                      translateX(-$drawerMaxWidth);
        }
      }
    }

    .Scrim {
      position:                     fixed;
      top:                            0px;
      left:                           0px;

      width:                        100vw;
      height:                       100vh;

      z-index:                      $belowLayer2;

      opacity:                        0.16;
    }
  }
}
